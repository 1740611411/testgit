package TSG;
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.io.Serializable;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
public class TSG extends JFrame{
	static String driverName="com.microsoft.sqlserver.jdbc.SQLServerDriver";
	static String dbUrl="jdbc:sqlserver://localhost:1433;DatabaseName=TuShuGuang";
	static String us="sa";
	static String pw="zxc150587";
public  static Connection getConn(String dbDriver,String dbUrl,String us,String pw){
	       Connection conn=null;
	      try {
			 Class.forName(dbDriver);
			 conn=DriverManager.getConnection(dbUrl,us,pw);
		} catch (ClassNotFoundException  e) {
			e.printStackTrace();
		}catch(SQLException e1){
			e1.printStackTrace();
		}
		return conn;
}
public static int peoplelog_in(String name,String password1) throws SQLException{//学生登陆
		 Connection conn=getConn(driverName, dbUrl, us, pw);
		 Statement sta=conn.createStatement();
		 ResultSet rs=sta.executeQuery("select * from people");
		 while(rs.next()){
			 String account=rs.getString("account");
			 String password=rs.getString("password");
			 String type=rs.getString("type");
			if(type.equals("student")) {
				if(account.equals(name)&&password.equals(password1)) {
					return 1;
				}
			}
		 }
		 return 0;
	}
public static int adminlog_in(String name,String password1) throws SQLException{//admin登陆
		 Connection conn=getConn(driverName, dbUrl, us, pw);
		 Statement sta=conn.createStatement();
		 ResultSet rs=sta.executeQuery("select * from people");
		 while(rs.next()){
			 String account=rs.getString("account");
			 String password=rs.getString("password");
			 String type=rs.getString("type");
			if(type.equals("admin")) {
				if(account.equals(name)&&password.equals(password1)) {
					return 1;
				}
			}
		 }
		 return 0;
	}
public static void peopleUpdate(String account,String password,String type,int userid)throws SQLException{//信息维护
		String peopleUpSql="update people set account=?,password=?,type=? where userid=?";
		Connection conn=getConn(driverName, dbUrl, us, pw);
		PreparedStatement psta=conn.prepareStatement(peopleUpSql);
		psta.setString(1, account);
		psta.setString(2, password);
		psta.setString(3, type);
		psta.setInt(4, userid);
		psta.addBatch();
		psta.executeBatch();
		psta.close();
		conn.close();
	}
public static int UPdateSelect(String y1) throws SQLException{//维护信息查找
		 Connection conn=getConn(driverName, dbUrl, us, pw);
		 Statement sta=conn.createStatement();
		 ResultSet rs=sta.executeQuery("select * from people");
		 while(rs.next()){
			 int userid=rs.getInt("userid");
			 String account=rs.getString("account");
			 String password=rs.getString("password");
			 String type=rs.getString("type");
			 if(account.equals(y1)) {
				 return userid;
			 }
		 }
		 UpdateError1();
		 return 0;
	}
public static void addborrowbook(ArrayList<BorrowBook> ls) throws SQLException{//借书添加
	  Connection conn=getConn(driverName, dbUrl, us, pw);
	  String insertSql="insert into borrowbook values(?,?,?,?,?,?,?,?,?,?,?,?);";
	  PreparedStatement psta=conn.prepareStatement(insertSql);
	  Iterator<BorrowBook> it=ls.iterator();
	  while(it.hasNext()){
		  BorrowBook uf=it.next();
		 //设置表字段值
		  psta.setInt(1, uf.getid());
		  psta.setString(2, uf.getname());
		  psta.setString(3, uf.getauthor());
		  psta.setString(4, uf.getpress());
		  psta.setString(5, uf.getISBN());
		  psta.setString(6, uf.getpubDate());
		  psta.setString(7, uf.getBorrow());
		  psta.setString(8, uf.getBorrowpeople());
		  psta.setInt(9, uf.getBorrowtime());
		  psta.setInt(10, uf.getstillwtime());
		  psta.setInt(11, uf.getmoney());
		  psta.setString(12, uf.getps());
		//往数据库中增加一批数据
		  psta.addBatch();
	  }
	  psta.executeBatch();
	  psta.close();
	  conn.close();
}
public static void bookUpdate(String name,String author,String press,String ISBN,String pubDate,String Borrow,int id)throws SQLException{//书籍借书状态跟新
	String bookUpSql="update book set name=?,author=?,press=?,ISBN=?,pubDate=?,Borrow=? where id=?";
	Connection conn=getConn(driverName, dbUrl, us, pw);
	PreparedStatement psta=conn.prepareStatement(bookUpSql);
	psta.setString(1, name);
	psta.setString(2, author);
	psta.setString(3, press);
	psta.setString(4, ISBN);
	psta.setString(5, pubDate);
	psta.setString(6, Borrow);
	psta.setInt(7, id);
	psta.addBatch();
	psta.executeBatch();
	psta.close();
	conn.close();
}
public static int  bookSelect(String n1,String n2,int day) throws SQLException{//借书
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from book");
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
		 if(name.equals(n1)) {
			 if(Borrow.equals("Yes")) {
				 return 2;
			 }
			 else {
				 Borrow="Yes";
				 bookUpdate(name,author,press,ISBN,pubDate,Borrow,id);
				 int count=borrowbookSelect();
				 id=count;
				 BorrowBook bb1=new BorrowBook(id,name,author,press,ISBN,pubDate,Borrow,n2,day,0,0,"无");
				 ArrayList<BorrowBook> arr=new ArrayList<BorrowBook>();
				 arr.add(bb1);
				 new UserSQLConn().addborrowbook(arr);
				 return 1;
			 } 
		 }
	 }
	 return 0;
}
public static  String bookSelect1(String n1) throws SQLException{//借书
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from book");
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
		 if(n1.equals(name)) {
			 return id+" "+name+" "+author+" "+press+" "+ISBN+" "+pubDate+" "+Borrow;
		 }
	 }
	 return "null";
}
public static void borrowbookUpdate(String name,String author,String press,String ISBN,String pubDate,String Borrow,String Borrowpeople,int Borrowtime,int stilltime,int money,String ps,int id)throws SQLException{
	String borrowbookUpSql="update borrowbook set name=?,author=?,press=?,ISBN=?,pubDate=?,Borrow=?,Borrowpeople=?,Borrowtime=?,stilltime=?,money=?,ps=? where id=?";
	Connection conn=getConn(driverName, dbUrl, us, pw);
	PreparedStatement psta=conn.prepareStatement(borrowbookUpSql);
	psta.setString(1, name);
	psta.setString(2, author);
	psta.setString(3, press);
	psta.setString(4, ISBN);
	psta.setString(5, pubDate);
	psta.setString(6, Borrow);
	psta.setString(7,Borrowpeople);
	psta.setInt(8,Borrowtime);
	psta.setInt(9,stilltime);
	psta.setInt(10,money);
	psta.setString(11,ps);
	psta.setInt(12, id);
	psta.addBatch();
	psta.executeBatch();
	psta.close();
	conn.close();
}
public static  int borrowbookSelect() throws SQLException{//借书返回id值
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from borrowbook");
	 int count=1;
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
		 String Borrowpeople=rs.getString("Borrowpeople");
		 int Borrowtime=rs.getInt("Borrowtime");
		 int stilltime=rs.getInt("stilltime");
		 int money=rs.getInt("money");
		 String ps=rs.getString("ps");
		 count++;
		 //System.out.println(id+"   "+name+"   "+author+"   "+press+"   "+ISBN+"   "+pubDate+"   "+Borrow+"   "+Borrowpeople+"   "+Borrowtime+"   "+stilltime+"   "+money+"   "+ps);
	 } 
	 return count;
}
public static  void bookSelect2(String name1,String Borrow1) throws SQLException{//还书更改yes
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from book");
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
		 if(name1.equals(name)) {
			 bookUpdate(name,author,press,ISBN,pubDate,Borrow1,id);
		 }
	 }
}
public static  int borrowbookSelect(String n1,String n2,int day) throws SQLException{//还书搜索
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from borrowbook");
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
		 String Borrowpeople=rs.getString("Borrowpeople");
		 int Borrowtime=rs.getInt("Borrowtime");
		 int stilltime=rs.getInt("stilltime");
		 int money=rs.getInt("money");
		 String ps=rs.getString("ps");
		 if(n2.equals(Borrowpeople)&&n1.equals(name)) {
			 if(stilltime==0) {
				 Borrow="No";
				 if(day-Borrowtime>15) {
					 money1();
					 money=2;
				 }
				 bookSelect2(n1,Borrow);
				 borrowbookUpdate(name,author,press,ISBN,pubDate,Borrow,Borrowpeople,Borrowtime,day,money,ps,id);
				 return 1;
			 }
		 }
		 //System.out.println(id+"   "+name+"   "+author+"   "+press+"   "+ISBN+"   "+pubDate+"   "+Borrow+"   "+Borrowpeople+"   "+Borrowtime+"   "+stilltime+"   "+money+"   "+ps);
	 } 
	 return 0;
}
public static  int borrowbookSelect1(String n1,int day,String p1) throws SQLException{//还书更改
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from borrowbook");
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
		 String Borrowpeople=rs.getString("Borrowpeople");
		 int Borrowtime=rs.getInt("Borrowtime");
		 int stilltime=rs.getInt("stilltime");
		 int money=rs.getInt("money");
		 String ps=rs.getString("ps");
		 if(n1.equals(name)) {
			 if(stilltime==day) {
				 if(ps.equals("无")) {
				 ps=p1;
				 borrowbookUpdate(name,author,press,ISBN,pubDate,Borrow,Borrowpeople,Borrowtime,stilltime,money,ps,id);
				 return 1;
			 }
			 }
		 }
		 //System.out.println(id+"   "+name+"   "+author+"   "+press+"   "+ISBN+"   "+pubDate+"   "+Borrow+"   "+Borrowpeople+"   "+Borrowtime+"   "+stilltime+"   "+money+"   "+ps);
	 } 
	 return 0;
}
public static String borrowbookSelect2(String n1) throws SQLException{//罚款搜索
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from borrowbook");
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
		 String Borrowpeople=rs.getString("Borrowpeople");
		 int Borrowtime=rs.getInt("Borrowtime");
		 int stilltime=rs.getInt("stilltime");
		 int money=rs.getInt("money");
		 String ps=rs.getString("ps");
		 if(n1.equals(Borrowpeople)) {
			 if(money!=0) {
				 int a=Borrowtime+15;
				 return Borrowpeople+"您在"+Borrowtime+"号借阅了"+name+"但你未在"+a+"号前归还，罚款"+money+"元";
			 }
			 }
		 }
	 return "无";
		 //System.out.println(id+"   "+name+"   "+author+"   "+press+"   "+ISBN+"   "+pubDate+"   "+Borrow+"   "+Borrowpeople+"   "+Borrowtime+"   "+stilltime+"   "+money+"   "+ps);
}
public static  String bookSelect2() throws SQLException{//图书维护
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from book");
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
			 return "第"+id+"条"+" "+name+" "+author+" "+press+" "+ISBN+" "+pubDate+" "+Borrow;
	 }
	 return null;
}
public static void addbook(ArrayList<book> ls) throws SQLException{//加书
	  Connection conn=getConn(driverName, dbUrl, us, pw);
	  String insertSql="insert into book values(?,?,?,?,?,?,?);";
	  PreparedStatement psta=conn.prepareStatement(insertSql);
	  Iterator<book> it=ls.iterator();
	  while(it.hasNext()){
		  book uf=it.next();
		 //设置表字段值
		  psta.setInt(1, uf.getid());
		  psta.setString(2, uf.getname());
		  psta.setString(3, uf.getauthor());
		  psta.setString(4, uf.getpress());
		  psta.setString(5, uf.getISBN());
		  psta.setString(6, uf.getpubDate());
		  psta.setString(7, uf.getBorrow());
		//往数据库中增加一批数据
		  psta.addBatch();
	  }
	  psta.executeBatch();
	  psta.close();
	  conn.close();
}
public static  int bookSelect3(int n1) throws SQLException{//添书判定
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from book");
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
		 if(n1==id) {
			 return 0;
		 }
	 }
	 return 1;
}
public static void bookDel(int index)throws SQLException{//删除书籍
	 String bookDelsql="delete from book where id="+index;
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 sta.executeUpdate(bookDelsql);
	 sta.close();
	 conn.close();
}
public static void peopleDel(int index)throws SQLException{//删除用户
	 String peopleDelsql="delete from people where userid="+index;
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 sta.executeUpdate(peopleDelsql);
	 sta.close();
	 conn.close();
}
public static int peopleSelect(int n) throws SQLException{//搜索用户
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from people");
	 while(rs.next()){
		 int userid=rs.getInt("userid");
		 String account=rs.getString("account");
		 String password=rs.getString("password");
		 String type=rs.getString("type");
		if(userid==n) {
			return 0;
			}
	 }
	 return 1;
}
public static void addpeople(ArrayList<User> ls) throws SQLException{//添加用户
	  Connection conn=getConn(driverName, dbUrl, us, pw);
	  String insertSql="insert into people values(?,?,?,?);";
	  PreparedStatement psta=conn.prepareStatement(insertSql);
	  Iterator<User> it=ls.iterator();
	  while(it.hasNext()){
		  User uf=it.next();
		 //设置表字段值
		  psta.setInt(1, uf.getuserid());
		  psta.setString(2, uf.getaccount());
		  psta.setString(3, uf.getpassword());
		  psta.setString(4, uf.gettype());
		//往数据库中增加一批数据
		  psta.addBatch();
	  }
	  psta.executeBatch();
	  psta.close();
	  conn.close();
}
public static void borrowbookDel(int index)throws SQLException{//删除阅读记录
	 String borrowbookDelsql="delete from borrowbook where id="+index;
	 Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 sta.executeUpdate(borrowbookDelsql);
	 sta.close();
	 conn.close();
}
public static void borrowbookUpdate1(String a1,String n2,String n3,String n4,int n5,int n6,int n7,String n8,int n)throws SQLException{//修改阅读记录
	Connection conn=getConn(driverName, dbUrl, us, pw);
	 Statement sta=conn.createStatement();
	 ResultSet rs=sta.executeQuery("select * from borrowbook");
	 while(rs.next()){
		 int id=rs.getInt("id");
		 String name=rs.getString("name");
		 String author=rs.getString("author");
		 String press=rs.getString("press");
		 String ISBN=rs.getString("ISBN");
		 String pubDate=rs.getString("pubDate");
		 String Borrow=rs.getString("Borrow");
		 String Borrowpeople=rs.getString("Borrowpeople");
		 int Borrowtime=rs.getInt("Borrowtime");
		 int stilltime=rs.getInt("stilltime");
		 int money=rs.getInt("money");
		 String ps=rs.getString("ps");
		 if(id==n) {
			 String borrowbookUpSql="update borrowbook set name=?,author=?,press=?,ISBN=?,pubDate=?,Borrow=?,Borrowpeople=?,Borrowtime=?,stilltime=?,money=?,ps=? where id=?";
			 Connection conn1=getConn(driverName, dbUrl, us, pw);
			 PreparedStatement psta=conn1.prepareStatement(borrowbookUpSql);
			 psta.setString(1, a1);
			 psta.setString(2, n2);
			 psta.setString(3, press);
			 psta.setString(4, ISBN);
			 psta.setString(5, pubDate);
			 psta.setString(6, n3);
			 psta.setString(7,n4);
			 psta.setInt(8,n5);
			 psta.setInt(9,n6);
			 psta.setInt(10,n7);
			 psta.setString(11,n8);
			 psta.setInt(12, id);
			 psta.addBatch();
			 psta.executeBatch();
			 psta.close();
			 conn1.close();
			 }
		 }
}
static void main_1() {//主界面
		JFrame jf1=new JFrame("图书馆管理系统");
		JButton b1,b2;
		JPanel jp1;
		b1=new JButton("学生登陆");
		b2=new JButton("管理登陆");
		jp1=new JPanel();
		jp1.setLayout(null);
		b1.setSize(150,50);
		b1.setLocation(325, 150);
		b1.setVisible(true);
		b1.setFont(new Font("隶书",Font.PLAIN,20));
		jp1.add(b1);
		b1.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				Login_1();
				jf1.dispose();
			}
		});
		b2.setSize(150,50);
		b2.setLocation(325, 250);
		b2.setFont(new Font("隶书",Font.PLAIN,20));
		b2.setVisible(true);
		b2.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				Login_2();
				jf1.dispose();
			}
		});
		jp1.add(b2);
		jf1.add(jp1,BorderLayout.CENTER);
		jf1.setSize(800,600);
		jf1.setVisible(true);
		jf1.setLocation(500, 300);
		jf1.setDefaultCloseOperation(EXIT_ON_CLOSE);
	}
static void Login_1(){//学生登陆界面
	JFrame jf2;
	JButton b1,b2; 
	JPanel mb2; //中部 
	JLabel lb1,lb2; 
	JTextField yhm; 
	JPasswordField mm;
	jf2=new JFrame("学生登陆");
	jf2.setSize(800,600); 
	jf2.setLocation(500,300);
	jf2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
	jf2.setVisible(true);
	lb1=new JLabel("用户名：",JLabel.CENTER); 
	lb1.setFont(new Font("隶书",Font.PLAIN,20));  
	lb2=new JLabel("密码：",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));  
	yhm=new JTextField(); 
	mm=new JPasswordField();  
	b1=new JButton("登录"); 
	b2=new JButton("返回");  
	b1.setSize(90,40);
	b1.setLocation(290, 270);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			String account2=yhm.getText();
			String password2=String.valueOf(mm.getPassword());
			int a=0;
			try {
				a=peoplelog_in(account2,password2);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			if(a==1) {
					StudentFrame();
					jf2.dispose();
			}else if(a==0){
				ErrorLogin();
			}		
				 }
	});
	b2.setSize(90,40);
	b2.setLocation(410, 270);
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			main_1();
			jf2.dispose();
		}
	});
	mb2=new JPanel();
	mb2.setLayout(null); 
	lb1.setBounds(280,200, 120, 20); 
	mb2.add(lb1); 
	yhm.setBounds(400, 200, 100, 20); 
	mb2.add(yhm); 
	lb2.setBounds(280, 230, 120, 20); 
	mb2.add(lb2);    
	mm.setBounds(400, 230, 100, 20);
	mb2.add(mm);  
	jf2.add(mb2,BorderLayout.CENTER);  
	mb2.add(b1); 
	mb2.add(b2); 
 }
static void Login_2(){//管理登陆界面
	JFrame jf2;
	JButton b1,b2; 
	JPanel mb2; //中部 
	JLabel lb1,lb2; 
	JTextField yhm; 
	JPasswordField mm;
	jf2=new JFrame("管理登陆");
	jf2.setSize(800,600); 
	jf2.setLocation(500, 300);
	jf2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
	jf2.setVisible(true);
	lb1=new JLabel("用户名：",JLabel.CENTER); 
	lb1.setFont(new Font("隶书",Font.PLAIN,20));  
	lb2=new JLabel("密码：",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));  
	yhm=new JTextField(); 
	mm=new JPasswordField();  
	b1=new JButton("登录"); 
	b2=new JButton("返回");  
	b1.setSize(90,40);
	b1.setLocation(290, 270);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			String y1=yhm.getText();
			String m1=String.valueOf(mm.getPassword());
			int a=0;
			try {
				a=adminlog_in(y1,m1);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			if(a==1) {
					MasterFrame();
					jf2.dispose();
			}else if(a==0){
				ErrorLogin();
			}		
				 }
	});
	b2.setSize(90,40);
	b2.setLocation(410, 270);
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			main_1();
			jf2.dispose();
		}
	});
	mb2=new JPanel();
	mb2.setLayout(null); 
	lb1.setBounds(280,200, 120, 20); 
	mb2.add(lb1); 
	yhm.setBounds(400, 200, 100, 20); 
	mb2.add(yhm); 
	lb2.setBounds(280, 230, 120, 20); 
	mb2.add(lb2);    
	mm.setBounds(400, 230, 100, 20);
	mb2.add(mm);  
	jf2.add(mb2,BorderLayout.CENTER);  
	mb2.add(b1); 
	mb2.add(b2); 
}
static void StudentFrame() {//学生界面
	JFrame jf3;
	JButton b1,b2,b3,b4,b5,b7;
	JPanel jp1;
	jf3=new JFrame("学生界面");
	jf3.setSize(800,600);
	jf3.setLocation(500, 300);
	jf3.setVisible(true);
	jp1=new JPanel();
	jp1.setLayout(null);
	b1=new JButton("借书");
	b1.setFont(new Font("隶书",Font.PLAIN,22));
	b1.setSize(80,80);
	b1.setLocation(170,120);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			userborrow();
			jf3.dispose();
		}
	});
	b2=new JButton("还书");
	b2.setFont(new Font("隶书",Font.PLAIN,22));
	b2.setSize(80,80);
	b2.setLocation(350,120);
	b2.setVisible(true);
	b2.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			userstill();
			jf3.dispose();
		}
	});
	b3=new JButton("<html>图书<br>维护</html>");
	b3.setFont(new Font("隶书",Font.PLAIN,20));
	b3.setSize(80,80);
	b3.setLocation(530,120);
	b3.setVisible(true);
	b3.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			Updatebook();
			jf3.dispose();
		}
	});
	b4=new JButton("<html>罚款<br>信息</html>");
	b4.setFont(new Font("隶书",Font.PLAIN,20));
	b4.setSize(80,80);
	b4.setLocation(170,250);
	b4.setVisible(true);
	b4.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			money();
			jf3.dispose();
		}
	});
	b5=new JButton("<html>信息<br>维护</html>");
	b5.setFont(new Font("隶书",Font.PLAIN,20));
	b5.setSize(80,80);
	b5.setLocation(350,250);
	b5.setVisible(true);
	b5.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			studentUpdate();
			jf3.dispose();
		}
	});
	b7=new JButton("退出");
	b7.setFont(new Font("隶书",Font.PLAIN,20));
	b7.setSize(90,40);
	b7.setLocation(650,480);
	b7.setVisible(true);
	b7.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			main_1();
			jf3.dispose();
		}
	});
	jf3.add(jp1,BorderLayout.CENTER);
	jp1.add(b1);
	jp1.add(b2);
	jp1.add(b3);
	jp1.add(b4);
	jp1.add(b5);
	jp1.add(b7);
	jf3.setDefaultCloseOperation(EXIT_ON_CLOSE);
}
static void MasterFrame() {//管理界面
	JFrame jf4;
	JPanel jp1;
	JButton b1,b2,b3,b4,b6;
	jf4=new JFrame("管理界面");
	jf4.setSize(800,600);
	jf4.setLocation(500,300);
	jf4.setVisible(true);
	jp1=new JPanel();
	jp1.setLayout(null);
	b1=new JButton("<html>图书<br>信息</html>");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,80);
	b1.setLocation(170,200);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			Updatemessage();
			jf4.dispose();
		}
	});
	b2=new JButton("<html>用户<br>维护</html>");
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setSize(80,80);
	b2.setLocation(350,200);
	b2.setVisible(true);
	b2.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			usermessage();
			jf4.dispose();
		}
	});
	b3=new JButton("<html>借书<br>信息</html>");
	b3.setFont(new Font("隶书",Font.PLAIN,20));
	b3.setSize(80,80);
	b3.setLocation(530,200);
	b3.setVisible(true);
	b3.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			readermessage();
			jf4.dispose();
		}
	});
	/*b5=new JButton("<html>罚款<br>信息</html>");
	b5.setFont(new Font("隶书",Font.PLAIN,20));
	b5.setSize(80,80);
	b5.setLocation(350,250);
	b5.setVisible(true);*/
	b6=new JButton("退出");
	b6.setFont(new Font("隶书",Font.PLAIN,20));
	b6.setSize(90,40);
	b6.setLocation(650,480);
	b6.setVisible(true);
	b6.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			main_1();
			jf4.dispose();
		}
	});
	jf4.add(jp1,BorderLayout.CENTER);
	jp1.add(b1);
	jp1.add(b2);
	jp1.add(b3);
	//jp1.add(b5);
	jp1.add(b6);
	jf4.setDefaultCloseOperation(EXIT_ON_CLOSE);
}
static void ErrorLogin() {//错误界面
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Error");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("用户名或密码有误！！！");
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(20, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void studentUpdate() {//学生信息维护界面
	JFrame jf1;
	JPanel jp1;
	JLabel lb1,lb2,lb3,lb4,lb5;
	JButton b1,b2;
	JTextField yhm,yhm1; 
	JPasswordField mm,mm1;
	jf1=new JFrame("信息维护");
	jf1.setSize(800,600);
	jf1.setLocation(500, 300);
	jf1.setVisible(true);
	lb1=new JLabel("个人信息维护！");
	lb1.setFont(new Font("隶书",Font.PLAIN,25));
	lb1.setSize(400,50);
	lb1.setLocation(300, 50);
	lb1.setVisible(true);
	lb2=new JLabel("旧用户名：",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb2.setBounds(280,170, 120, 20);
	lb3=new JLabel("新用户名：",JLabel.CENTER); 
	lb3.setFont(new Font("隶书",Font.PLAIN,20));
	lb3.setBounds(280, 200, 120, 20);
	lb4=new JLabel("新密码：",JLabel.CENTER); 
	lb4.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb4.setBounds(280,230, 120, 20);
	lb5=new JLabel("确定新密码：",JLabel.CENTER); 
	lb5.setFont(new Font("隶书",Font.PLAIN,20));
	lb5.setBounds(280, 260, 120, 20);
	yhm=new JTextField(); 
	yhm.setBounds(400, 170, 100, 20);
	yhm1=new JTextField(); 
	yhm1.setBounds(400, 200, 100, 20);
	mm=new JPasswordField();
	mm1=new JPasswordField();
	mm.setBounds(400, 230, 100, 20);
	mm1.setBounds(400, 260, 100, 20);
	b1=new JButton("确定"); 
	b2=new JButton("返回");  
	b1.setSize(90,40);
	b1.setLocation(290, 300);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			String y1=yhm.getText();
			String y2=yhm1.getText();
			int id=0;
			String type="student";
			String m1=String.valueOf(mm.getPassword());
			String m2=String.valueOf(mm1.getPassword());
			if(m1.equals(m2)) {
					try {
						id=UPdateSelect(y1);
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					};
					if(id!=0) {
						try {
						peopleUpdate(y2,m1,type,id);
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
						okUPdate();
					}
			}
			else {
				ErrorLogin1();
			}
		}
			
	});
	b2.setSize(90,40);
	b2.setLocation(410, 300);
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
			StudentFrame();
		}
	});
	jp1=new JPanel();
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(mm1);
	jp1.add(mm);
	jp1.add(yhm1);
	jp1.add(yhm);
	jp1.add(lb2);
	jp1.add(lb3);
	jp1.add(lb4);
	jp1.add(lb5);
	jp1.add(b2);
	jp1.add(b1);
}
static void userborrow() {//借书界面
	JFrame jf1;
	JPanel jp1;
	JButton b1,b2;
	JTextField t1,t2,t3;
	JLabel lb1,lb2,lb3;
	jf1=new JFrame("BorrowBook");
	jf1.setSize(800,600); 
	jf1.setLocation(500,300);
	jf1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
	jf1.setVisible(true);
	jp1=new JPanel();
	lb1=new JLabel("要借阅的书：",JLabel.CENTER); 
	lb1.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb1.setBounds(280,170, 120, 20);
	lb2=new JLabel("借阅人：",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));
	lb2.setBounds(280, 200, 120, 20);
	lb3=new JLabel("借阅日期(号数)：",JLabel.CENTER); 
	lb3.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb3.setBounds(240,230, 160, 20);
	t1=new JTextField(); 
	t1.setBounds(400, 170, 100, 20);
	t2=new JTextField(); 
	t2.setBounds(400, 200, 100, 20);
	t3=new JTextField(); 
	t3.setBounds(400, 230, 100, 20);
	b1=new JButton("借阅");
	b1.setSize(90,60);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setLocation(355,300);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			String n1=t1.getText();
			String n2=t2.getText();
			int day=Integer.valueOf(t3.getText()).intValue();
			int a=0;
			try {
				a=bookSelect(n1,n2,day);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			if(a==1) {
				borrowok(n1,day);
			}else if(a==2){
				ErrorBorrow1();
			}else {
				ErrorBorrow();
			}
		}
	});
	b2=new JButton("返回");
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setSize(90,40);
	b2.setLocation(650,480);
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			StudentFrame();
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(t1);
	jp1.add(b2);
	jp1.add(b1);
	jp1.add(lb2);
	jp1.add(lb3);
	jp1.add(t2);
	jp1.add(t3);
}
static void userstill() {//还书界面
	JFrame jf1;
	JPanel jp1;
	JButton b1,b2;
	JTextField t1,t2,t3;
	JLabel lb1,lb2,lb3;
	jf1=new JFrame("StillBook");
	jf1.setSize(800,600); 
	jf1.setLocation(500,300);
	jf1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
	jf1.setVisible(true);
	jp1=new JPanel();
	lb1=new JLabel("要还的书：",JLabel.CENTER); 
	lb1.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb1.setBounds(280,170, 120, 20);
	lb2=new JLabel("还书人：",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));
	lb2.setBounds(280, 200, 120, 20);
	lb3=new JLabel("还书日期(号数)：",JLabel.CENTER); 
	lb3.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb3.setBounds(240,230, 160, 20);
	t1=new JTextField(); 
	t1.setBounds(400, 170, 100, 20);
	t2=new JTextField(); 
	t2.setBounds(400, 200, 100, 20);
	t3=new JTextField(); 
	t3.setBounds(400, 230, 100, 20);
	b1=new JButton("还书");
	b1.setSize(90,60);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setLocation(355,300);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			String n1=t1.getText();
			String n2=t2.getText();
			int day=Integer.valueOf(t3.getText()).intValue();
			int a=0;
			try {
				a=borrowbookSelect(n1,n2,day);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			if(a==1) {
				stillok();
			}else {
				Errorstill();
			}
		}
	});
	b2=new JButton("返回");
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setSize(90,40);
	b2.setLocation(650,480);
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			StudentFrame();
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(t1);
	jp1.add(b2);
	jp1.add(b1);
	jp1.add(lb2);
	jp1.add(lb3);
	jp1.add(t2);
	jp1.add(t3);
}
static void Updatebook() {//维护界面
	JFrame jf1;
	JPanel jp1;
	JButton b1,b2;
	JTextField t1,t2,t3;
	JLabel lb1,lb2,lb3,lb4;
	jf1=new JFrame("Updatebook");
	jf1.setSize(800,600); 
	jf1.setLocation(500,300);
	jf1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
	jf1.setVisible(true);
	jp1=new JPanel();
	lb4=new JLabel("如果您借阅的书有破损、字迹不清等请维护！",JLabel.CENTER);
	lb4.setFont(new Font("隶书",Font.PLAIN,25));
	lb4.setSize(790,50);
	lb4.setLocation(10, 50);
	lb4.setVisible(true);
	lb1=new JLabel("书籍名称",JLabel.CENTER); 
	lb1.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb1.setBounds(280,170, 120, 30);
	lb2=new JLabel("还书日期(号数)：",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));
	lb2.setBounds(230, 210, 170, 30);
	lb3=new JLabel("输入您要维护的信息：",JLabel.CENTER); 
	lb3.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb3.setBounds(200,250, 200, 30);
	t1=new JTextField(); 
	t1.setBounds(420, 170, 100, 30);
	t2=new JTextField(); 
	t2.setBounds(420, 210, 100, 30);
	t3=new JTextField(); 
	t3.setBounds(420,250,250,30);
	b1=new JButton("提交");
	b1.setSize(80,50);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setLocation(355,320);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			String n1=t1.getText();
			int day2=Integer.valueOf(t2.getText()).intValue();
			String p1=t3.getText();
			int a=0;
			try {
				a=borrowbookSelect1(n1,day2,p1);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			if(a==1) {
				Updateok();
			}else {
				UpdateError();
			}
		}
	});
	b2=new JButton("返回");
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setSize(90,40);
	b2.setLocation(650,480);
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			StudentFrame();
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(t1);
	jp1.add(b2);
	jp1.add(b1);
	jp1.add(lb2);
	jp1.add(lb3);
	jp1.add(t2);
	jp1.add(t3);
	jp1.add(lb4);
}
static void money() {//罚款界面
	JFrame jf1;
	JPanel jp1;
	JLabel lb1,lb2,lb3,lb4,lb5;
	JButton b1,b2;
	JTextField yhm; 
	jf1=new JFrame("罚款信息");
	jf1.setSize(800,600);
	jf1.setLocation(500, 300);
	jf1.setVisible(true);
	lb1=new JLabel("用户名：",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,25));
	lb1.setSize(100,50);
	lb1.setLocation(250, 50);
	lb1.setVisible(true);
	lb2=new JLabel("",JLabel.CENTER);
	lb2.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb2.setBounds(10,120,780,350);
	yhm=new JTextField(); 
	yhm.setBounds(350,60, 80, 40);
	b1=new JButton("查询"); 
	b2=new JButton("返回");  
	b1.setSize(80,40);
	b1.setLocation(440,60);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			String n1=yhm.getText();
			String a="";
			try {
				 a=borrowbookSelect2(n1);
			} catch (SQLException e2) {
				// TODO Auto-generated catch block
				e2.printStackTrace();
			}
				lb2.setText(a);
		}
	});
	b2.setSize(90,40);
	b2.setLocation(600, 460);
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
			StudentFrame();
		}
	});
	jp1=new JPanel();
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(yhm);
	jp1.add(lb2);
	jp1.add(b2);
	jp1.add(b1);
}
static void Updatemessage(){//书籍维护
    //定义一些控件
	JFrame jf1;
	JTable jt;
	JScrollPane jsp;
	JPanel jp1;
	jf1=new JFrame("图书维护");
	jf1.setSize(800,600);
	jf1.setLocation(500, 300);
	jf1.setVisible(true);
	jf1.setLayout(null);
	jf1.setDefaultCloseOperation(EXIT_ON_CLOSE);
	JButton b1,b2,b3,b4;
	JLabel lb1,lb2,lb3,lb4;
	JTextField t1,t2;
	jp1=new JPanel();
	t1=new JTextField();
	t2=new JTextField();
	t1.setBounds(170, 60,40,30);
	t2.setBounds(170, 110, 40, 30);
	b1=new JButton("修改");
	b1.setSize(60, 30);
	b1.setLocation(60,60);
	b1.setFont(new Font("隶书",Font.PLAIN,12));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			String a=t1.getText();
			if(a.equals("")){
				nullError();
	}else {
		int n1=Integer.parseInt(t1.getText());
			Updatebook1(n1);
	}
		}
	});
	b2=new JButton("删除");
	b2.setSize(60, 30);
	b2.setLocation(60,110);
	b2.setFont(new Font("隶书",Font.PLAIN,12));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			String a=t2.getText();
			if(a.equals("")){
				nullError();
	}else {
		int n1=Integer.parseInt(a);
			try {
				bookDel(n1);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			Delok();
	}
			
		}
	});
	lb1=new JLabel("id为");
	lb1.setSize(30, 30);
	lb1.setLocation(130, 60);
	lb1.setVisible(true);
	lb2=new JLabel("id为");
	lb2.setSize(30, 30);
	lb2.setLocation(130, 110);
	lb2.setVisible(true);
	lb3=new JLabel("的书");
	lb3.setSize(60, 30);
	lb3.setLocation(220, 60);
	lb3.setVisible(true);
	lb4=new JLabel("的书");
	lb4.setSize(60, 30);
	lb4.setLocation(220, 110);
	lb4.setVisible(true);
	b3=new JButton("添加");
	b3.setSize(60, 30);
	b3.setLocation(650,60);
	b3.setFont(new Font("隶书",Font.PLAIN,12));
	b3.setVisible(true);
	b3.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			addbook();
		}
	});
	b4=new JButton("返回");
	b4.setSize(60, 30);
	b4.setLocation(650,110);
	b4.setFont(new Font("隶书",Font.PLAIN,12));
	b4.setVisible(true);
	b4.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			MasterFrame();
			jf1.dispose();
		}
	});
	PreparedStatement ps = null;
    Connection ct = null;
    ResultSet rs = null;
    Vector rowData,columnNames;
       columnNames=new Vector();
        //设置列名
       columnNames.add("id");
       columnNames.add("name");
       columnNames.add("author");
       columnNames.add("press");
       columnNames.add("ISBN");
       columnNames.add("pubDate");
       columnNames.add("Borrow");
        rowData = new Vector();
        try {
            Connection conn=getConn(driverName, dbUrl, us, pw);
       	 	Statement sta=conn.createStatement();
       	 	ResultSet rs1=sta.executeQuery("select * from book");
       	 	while(rs1.next()){
       	 			Vector hang = new Vector();
       	 			hang.add(rs1.getInt(1));
       	 			hang.add(rs1.getString(2));
       	 			hang.add(rs1.getString(3));
       	 			hang.add(rs1.getString(4));
       	 			hang.add(rs1.getString(5));
       	 			hang.add(rs1.getString(6));
       	 			hang.add(rs1.getString(7));
       	 			rowData.add(hang);
       	 		}
        }catch (Exception e) {
            e.printStackTrace();
        }finally {
            try {
                if (rs!= null) rs.close();
                if(ps!=null) ps.close();
                if(ct!=null) ct.close();
            }catch (Exception e) {
                e.printStackTrace();
            }
        }
        jt = new JTable(rowData,columnNames);
        jsp = new JScrollPane(jt);
        jp1=new JPanel();
        jsp.setSize(800, 400);
        jp1=new JPanel();
        jp1.setLayout(null);
        jp1.setSize(800, 200);
        jp1.setLocation(0,400);
        jp1.add(t2);
        jp1.add(t1);
        jp1.add(lb4);
        jp1.add(lb3);
        jp1.add(lb2);
        jp1.add(lb1);
        jp1.add(b4);
        jp1.add(b3);
        jp1.add(b2);
        jp1.add(b1);
        jf1.add(jp1);
        jf1.add(jsp);
    }
static void addbook() {//添加书籍
	JFrame jf1;
	JPanel jp1;
	JLabel lb1,lb2,lb3,lb4,lb5,lb6,lb7;
	JButton b1,b2;
	JTextField t1,t2,t3,t4,t5,t6,t7; 
	jf1=new JFrame("添加书籍");
	jf1.setSize(800,600);
	jf1.setLocation(500, 300);
	jf1.setVisible(true);
	lb1=new JLabel("id",JLabel.CENTER); 
	lb1.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb1.setBounds(280,100, 120, 30);
	lb2=new JLabel("name",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));
	lb2.setBounds(280, 150, 120, 30);
	lb3=new JLabel("author",JLabel.CENTER); 
	lb3.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb3.setBounds(280,200, 120, 30);
	lb4=new JLabel("press",JLabel.CENTER); 
	lb4.setFont(new Font("隶书",Font.PLAIN,20));
	lb4.setBounds(280, 250, 120, 30);
	lb5=new JLabel("ISBN",JLabel.CENTER); 
	lb5.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb5.setBounds(280,300, 120, 30);
	lb6=new JLabel("pubDate",JLabel.CENTER); 
	lb6.setFont(new Font("隶书",Font.PLAIN,20));
	lb6.setBounds(280, 350, 120, 30);
	t1=new JTextField(); 
	t1.setBounds(400, 100, 100, 30);
	t2=new JTextField(); 
	t2.setBounds(400, 150, 100, 30);
	t3=new JTextField();
	t4=new JTextField();
	t3.setBounds(400, 200, 100, 30);
	t4.setBounds(400, 250, 100, 30);
	t5=new JTextField();
	t6=new JTextField();
	t5.setBounds(400, 300, 100, 30);
	t6.setBounds(400, 350, 100, 30);
	b1=new JButton("确定"); 
	b2=new JButton("返回");  
	b1.setSize(90,40);
	b1.setLocation(290, 450);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			int n1=Integer.parseInt(t1.getText());
			String n2=t2.getText();
			String n3=t3.getText();
			String n4=t4.getText();
			String n5=t5.getText();
			String n6=t6.getText();
			String Borrow="No";
			int a=0;
			try {
				a=bookSelect3(n1);
			} catch (SQLException e2) {
				// TODO Auto-generated catch block
				e2.printStackTrace();
			}
			if(a==1) {
				book book1=new book(n1,n2,n3,n4,n5,n6,Borrow);
				ArrayList<book> arr=new ArrayList<book>();
				arr.add(book1);
				try {
					addbook(arr);
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				addok();
			}else {
				addError();
			}
		}
	});
	b2.setSize(90,40);
	b2.setLocation(410, 450);
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1=new JPanel();
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(lb2);
	jp1.add(lb3);
	jp1.add(lb4);
	jp1.add(lb5);
	jp1.add(lb6);
	jp1.add(t5);
	jp1.add(t6);
	jp1.add(t4);
	jp1.add(t3);
	jp1.add(t2);
	jp1.add(t1);
	jp1.add(b2);
	jp1.add(b1);
}
static void Updatebook1(int n1) {//修改书籍
	JFrame jf1;
	JPanel jp1;
	JLabel lb1,lb2,lb3,lb4,lb5,lb6,lb7;
	JButton b1,b2;
	JTextField t1,t2,t3,t4,t5,t6,t7; 
	jf1=new JFrame("修改书籍");
	jf1.setSize(800,600);
	jf1.setLocation(500, 300);
	jf1.setVisible(true);
	lb1=new JLabel("new name",JLabel.CENTER); 
	lb1.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb1.setBounds(280,100, 120, 30);
	lb2=new JLabel("new author",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));
	lb2.setBounds(280, 150, 120, 30);
	lb3=new JLabel("new press",JLabel.CENTER); 
	lb3.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb3.setBounds(280,200, 120, 30);
	lb4=new JLabel("new ISBN",JLabel.CENTER); 
	lb4.setFont(new Font("隶书",Font.PLAIN,20));
	lb4.setBounds(280, 250, 120, 30);
	lb5=new JLabel("new pubDate",JLabel.CENTER); 
	lb5.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb5.setBounds(280,300, 120, 30);
	lb6=new JLabel("new Borrow",JLabel.CENTER); 
	lb6.setFont(new Font("隶书",Font.PLAIN,20));
	lb6.setBounds(280, 350, 120, 30);
	t1=new JTextField(); 
	t1.setBounds(400, 100, 100, 30);
	t2=new JTextField(); 
	t2.setBounds(400, 150, 100, 30);
	t3=new JTextField();
	t4=new JTextField();
	t3.setBounds(400, 200, 100, 30);
	t4.setBounds(400, 250, 100, 30);
	t5=new JTextField();
	t6=new JTextField();
	t5.setBounds(400, 300, 100, 30);
	t6.setBounds(400, 350, 100, 30);
	b1=new JButton("确定"); 
	b2=new JButton("返回");  
	b1.setSize(90,40);
	b1.setLocation(290, 450);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			String a1=t1.getText();
			String n2=t2.getText();
			String n3=t3.getText();
			String n4=t4.getText();
			String n5=t5.getText();
			String n6=t6.getText();
			try {
				bookUpdate(a1,n2,n3,n4,n5,n6,n1);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			Updateok1();
		}
	});
	b2.setSize(90,40);
	b2.setLocation(410, 450);
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1=new JPanel();
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(t1);
	jp1.add(lb2);
	jp1.add(lb3);
	jp1.add(lb4);
	jp1.add(lb5);
	jp1.add(lb6);
	jp1.add(t5);
	jp1.add(t6);
	jp1.add(t4);
	jp1.add(t3);
	jp1.add(t2);;
	jp1.add(b2);
	jp1.add(b1);
}
static void usermessage() {//用户信息维护
	//定义一些控件
		JFrame jf1;
		JTable jt;
		JScrollPane jsp;
		JPanel jp1;
		jf1=new JFrame("读者维护");
		jf1.setSize(800,600);
		jf1.setLocation(500, 300);
		jf1.setVisible(true);
		jf1.setLayout(null);
		jf1.setDefaultCloseOperation(EXIT_ON_CLOSE);
		JButton b1,b2,b3,b4;
		JLabel lb1,lb2,lb3,lb4;
		JTextField t1,t2;
		jp1=new JPanel();
		t1=new JTextField();
		t2=new JTextField();
		t1.setBounds(170, 60,40,30);
		t2.setBounds(170, 110, 40, 30);
		b1=new JButton("修改");
		b1.setSize(60, 30);
		b1.setLocation(60,60);
		b1.setFont(new Font("隶书",Font.PLAIN,12));
		b1.setVisible(true);
		b1.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				String a=t1.getText();
				if(a.equals("")){
					nullError();
		}else {
			int n1=Integer.parseInt(t1.getText());
				Updateuser(n1);
		}
			}
		});
		b2=new JButton("删除");
		b2.setSize(60, 30);
		b2.setLocation(60,110);
		b2.setFont(new Font("隶书",Font.PLAIN,12));
		b2.setVisible(true);
		b2.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				String a=t2.getText();
				if(a.equals("")){
					nullError();
		}else {
			int n1=Integer.parseInt(a);
				try {
					peopleDel(n1);
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				Delok();
		}
				
			}
		});
		lb1=new JLabel("id为");
		lb1.setSize(30, 30);
		lb1.setLocation(130, 60);
		lb1.setVisible(true);
		lb2=new JLabel("id为");
		lb2.setSize(30, 30);
		lb2.setLocation(130, 110);
		lb2.setVisible(true);
		lb3=new JLabel("的用户");
		lb3.setSize(60, 30);
		lb3.setLocation(220, 60);
		lb3.setVisible(true);
		lb4=new JLabel("的用户");
		lb4.setSize(60, 30);
		lb4.setLocation(220, 110);
		lb4.setVisible(true);
		b3=new JButton("添加");
		b3.setSize(60, 30);
		b3.setLocation(650,60);
		b3.setFont(new Font("隶书",Font.PLAIN,12));
		b3.setVisible(true);
		b3.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				adduser();
			}
		});
		b4=new JButton("返回");
		b4.setSize(60, 30);
		b4.setLocation(650,110);
		b4.setFont(new Font("隶书",Font.PLAIN,12));
		b4.setVisible(true);
		b4.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				MasterFrame();
				jf1.dispose();
			}
		});
		PreparedStatement ps = null;
	    Connection ct = null;
	    ResultSet rs = null;
	    Vector rowData,columnNames;
	       columnNames=new Vector();
	        //设置列名
	       columnNames.add("id");
	       columnNames.add("account");
	       columnNames.add("password");
	       columnNames.add("type");;
	        rowData = new Vector();
	        try {
	            Connection conn=getConn(driverName, dbUrl, us, pw);
	       	 	Statement sta=conn.createStatement();
	       	 	ResultSet rs1=sta.executeQuery("select * from people");
	       	 	while(rs1.next()){
	       	 			Vector hang = new Vector();
	       	 			hang.add(rs1.getInt(1));
	       	 			hang.add(rs1.getString(2));
	       	 			hang.add(rs1.getString(3));
	       	 			hang.add(rs1.getString(4));
	       	 			rowData.add(hang);
	       	 		}
	        }catch (Exception e) {
	            e.printStackTrace();
	        }finally {
	            try {
	                if (rs!= null) rs.close();
	                if(ps!=null) ps.close();
	                if(ct!=null) ct.close();
	            }catch (Exception e) {
	                e.printStackTrace();
	            }
	        }
	        jt = new JTable(rowData,columnNames);
	        jsp = new JScrollPane(jt);
	        jp1=new JPanel();
	        jsp.setSize(800, 400);
	        jp1=new JPanel();
	        jp1.setLayout(null);
	        jp1.setSize(800, 200);
	        jp1.setLocation(0,400);
	        jp1.add(t2);
	        jp1.add(t1);
	        jp1.add(lb4);
	        jp1.add(lb3);
	        jp1.add(lb2);
	        jp1.add(lb1);
	        jp1.add(b4);
	        jp1.add(b3);
	        jp1.add(b2);
	        jp1.add(b1);
	        jf1.add(jp1);
	        jf1.add(jsp);
}
static void Updateuser(int n) {//修改用户
	JFrame jf1;
	JPanel jp1;
	JLabel lb1,lb2,lb3,lb4,lb5,lb6,lb7;
	JButton b1,b2;
	JTextField t1,t2,t3,t4,t5,t6,t7; 
	jf1=new JFrame("修改用户");
	jf1.setSize(800,600);
	jf1.setLocation(500, 300);
	jf1.setVisible(true);
	//lb1=new JLabel("new name",JLabel.CENTER); 
	//lb1.setFont(new Font("隶书",Font.PLAIN,20)); 
	//lb1.setBounds(280,100, 120, 30);
	lb2=new JLabel("new account",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));
	lb2.setBounds(280, 150, 120, 30);
	//lb3=new JLabel("new press",JLabel.CENTER); 
	//lb3.setFont(new Font("隶书",Font.PLAIN,20)); 
	//lb3.setBounds(280,200, 120, 30);
	lb4=new JLabel("new password",JLabel.CENTER); 
	lb4.setFont(new Font("隶书",Font.PLAIN,20));
	lb4.setBounds(250, 250, 150, 30);
	//lb5=new JLabel("new pubDate",JLabel.CENTER); 
	//lb5.setFont(new Font("隶书",Font.PLAIN,20)); 
	//lb5.setBounds(280,300, 120, 30);
	lb6=new JLabel("new type",JLabel.CENTER); 
	lb6.setFont(new Font("隶书",Font.PLAIN,20));
	lb6.setBounds(280, 350, 120, 30);
	//t1=new JTextField(); 
	//t1.setBounds(400, 100, 100, 30);
	t2=new JTextField(); 
	t2.setBounds(400, 150, 100, 30);
	//t3=new JTextField();
	t4=new JTextField();
	//t3.setBounds(400, 200, 100, 30);
	t4.setBounds(400, 250, 100, 30);
	//t5=new JTextField();
	t6=new JTextField();
	//t5.setBounds(400, 300, 100, 30);
	t6.setBounds(400, 350, 100, 30);
	b1=new JButton("确定"); 
	b2=new JButton("返回");  
	b1.setSize(90,40);
	b1.setLocation(290, 450);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			//String a1=t1.getText();
			String n2=t2.getText();
			//String n3=t3.getText();
			String n4=t4.getText();
			//String n5=t5.getText();
			String n6=t6.getText();
			try {
				peopleUpdate(n2,n4,n6,n);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			Updateok1();
		}
	});
	b2.setSize(90,40);
	b2.setLocation(410, 450);
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1=new JPanel();
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	//jp1.add(lb1);
	//jp1.add(t1);
	jp1.add(lb2);
	//jp1.add(lb3);
	jp1.add(lb4);
	//jp1.add(lb5);
	jp1.add(lb6);
	//jp1.add(t5);
	jp1.add(t6);
	jp1.add(t4);
	//jp1.add(t3);
	jp1.add(t2);;
	jp1.add(b2);
	jp1.add(b1);
}
static void adduser() {//加用户
	JFrame jf1;
	JPanel jp1;
	JLabel lb1,lb2,lb3,lb4;
	JButton b1,b2;
	JTextField t1,t2,t3,t4; 
	jf1=new JFrame("添加用户");
	jf1.setSize(800,600);
	jf1.setLocation(500, 300);
	jf1.setVisible(true);
	lb1=new JLabel("id",JLabel.CENTER); 
	lb1.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb1.setBounds(280,150, 120, 30);
	lb2=new JLabel("account",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));
	lb2.setBounds(280, 200, 120, 30);
	lb3=new JLabel("passeord",JLabel.CENTER); 
	lb3.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb3.setBounds(280,250, 120, 30);
	lb4=new JLabel("type",JLabel.CENTER); 
	lb4.setFont(new Font("隶书",Font.PLAIN,20));
	lb4.setBounds(280, 300, 120, 30);
	t1=new JTextField(); 
	t1.setBounds(400, 150, 100, 30);
	t2=new JTextField(); 
	t2.setBounds(400, 200, 100, 30);
	t3=new JTextField();
	t4=new JTextField();
	t3.setBounds(400, 250, 100, 30);
	t4.setBounds(400, 300, 100, 30);
	b1=new JButton("确定"); 
	b2=new JButton("返回");  
	b1.setSize(90,40);
	b1.setLocation(290, 450);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			int n1=Integer.parseInt(t1.getText());
			String n2=t2.getText();
			String n3=t3.getText();
			String n4=t4.getText();
			int a=0;
			try {
				a=peopleSelect(n1);
			} catch (SQLException e2) {
				// TODO Auto-generated catch block
				e2.printStackTrace();
			}
			if(a==1) {
				User user1=new User(n1,n2,n3,n4);
				ArrayList<User> arr=new ArrayList<User>();
				arr.add(user1);
				try {
					addpeople(arr);
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				addok();
			}else {
				addError();
			}
		}
	});
	b2.setSize(90,40);
	b2.setLocation(410, 450);
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1=new JPanel();
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(lb2);
	jp1.add(lb3);
	jp1.add(lb4);
	jp1.add(t4);
	jp1.add(t3);
	jp1.add(t2);
	jp1.add(t1);
	jp1.add(b2);
	jp1.add(b1);
}
static void readermessage() {//借阅信息
	//定义一些控件
		JFrame jf1;
		JTable jt;
		JScrollPane jsp;
		JPanel jp1;
		jf1=new JFrame("读书维护");
		jf1.setSize(800,600);
		jf1.setLocation(500, 300);
		jf1.setVisible(true);
		jf1.setLayout(null);
		jf1.setDefaultCloseOperation(EXIT_ON_CLOSE);
		JButton b1,b2,b4;
		JLabel lb1,lb2,lb3,lb4;
		JTextField t1,t2;
		jp1=new JPanel();
		t1=new JTextField();
		t2=new JTextField();
		t1.setBounds(170, 60,40,30);
		t2.setBounds(170, 110, 40, 30);
		b1=new JButton("修改");
		b1.setSize(60, 30);
		b1.setLocation(60,60);
		b1.setFont(new Font("隶书",Font.PLAIN,12));
		b1.setVisible(true);
		b1.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				String a=t1.getText();
				if(a.equals("")){
					nullError();
		}else {
			int n1=Integer.parseInt(t1.getText());
			Updatereadmessage(n1);
		}
			}
		});
		b2=new JButton("删除");
		b2.setSize(60, 30);
		b2.setLocation(60,110);
		b2.setFont(new Font("隶书",Font.PLAIN,12));
		b2.setVisible(true);
		b2.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				String a=t2.getText();
				if(a.equals("")){
					nullError();
		}else {
			int n1=Integer.parseInt(a);
				try {
					borrowbookDel(n1);
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				Delok();
		}	
			}
		});
		lb1=new JLabel("id为");
		lb1.setSize(30, 30);
		lb1.setLocation(130, 60);
		lb1.setVisible(true);
		lb2=new JLabel("id为");
		lb2.setSize(30, 30);
		lb2.setLocation(130, 110);
		lb2.setVisible(true);
		lb3=new JLabel("的记录");
		lb3.setSize(60, 30);
		lb3.setLocation(220, 60);
		lb3.setVisible(true);
		lb4=new JLabel("的记录");
		lb4.setSize(60, 30);
		lb4.setLocation(220, 110);
		lb4.setVisible(true);
		//b3=new JButton("添加");
		//b3.setSize(60, 30);
		//b3.setLocation(650,60);
		//b3.setFont(new Font("隶书",Font.PLAIN,12));
		//b3.setVisible(true);
		b4=new JButton("返回");
		b4.setSize(60, 30);
		b4.setLocation(650,110);
		b4.setFont(new Font("隶书",Font.PLAIN,12));
		b4.setVisible(true);
		b4.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				MasterFrame();
				jf1.dispose();
			}
		});
		PreparedStatement ps = null;
	    Connection ct = null;
	    ResultSet rs = null;
	    Vector rowData,columnNames;
	       columnNames=new Vector();
	        //设置列名
	       columnNames.add("id");
	       columnNames.add("name");
	       columnNames.add("author");;
	       columnNames.add("Borrow");
	       columnNames.add("Borrowpeople");
	       columnNames.add("Borrortime");
	       columnNames.add("stilltime");
	       columnNames.add("money");
	       columnNames.add("ps");
	        rowData = new Vector();
	        try {
	            Connection conn=getConn(driverName, dbUrl, us, pw);
	       	 	Statement sta=conn.createStatement();
	       	 	ResultSet rs1=sta.executeQuery("select * from borrowbook");
	       	 	while(rs1.next()){
	       	 			Vector hang = new Vector();
	       	 			hang.add(rs1.getInt(1));
	       	 			hang.add(rs1.getString(2));
	       	 			hang.add(rs1.getString(3));
	       	 			hang.add(rs1.getString(7));
	       	 			hang.add(rs1.getString(8));
	       	 			hang.add(rs1.getInt(9));
	       	 			hang.add(rs1.getInt(10));
	       	 			hang.add(rs1.getInt(11));
	       	 			hang.add(rs1.getString(12));
	       	 			rowData.add(hang);
	       	 		}
	        }catch (Exception e) {
	            e.printStackTrace();
	        }finally {
	            try {
	                if (rs!= null) rs.close();
	                if(ps!=null) ps.close();
	                if(ct!=null) ct.close();
	            }catch (Exception e) {
	                e.printStackTrace();
	            }
	        }
	        jt = new JTable(rowData,columnNames);
	        jsp = new JScrollPane(jt);
	        jp1=new JPanel();
	        jsp.setSize(800, 400);
	        jp1=new JPanel();
	        jp1.setLayout(null);
	        jp1.setSize(800, 200);
	        jp1.setLocation(0,400);
	        jp1.add(t2);
	        jp1.add(t1);
	        jp1.add(lb4);
	        jp1.add(lb3);
	        jp1.add(lb2);
	        jp1.add(lb1);
	        jp1.add(b4);
	       // jp1.add(b3);
	        jp1.add(b2);
	        jp1.add(b1);
	        jf1.add(jp1);
	        jf1.add(jsp);
}
static void Updatereadmessage(int n) {//修改阅读记录
	JFrame jf1;
	JPanel jp1;
	JLabel lb1,lb2,lb3,lb4,lb5,lb6,lb7,lb8;
	JButton b1,b2;
	JTextField t1,t2,t3,t4,t5,t6,t7,t8; 
	jf1=new JFrame("修改阅读记录");
	jf1.setSize(800,600);
	jf1.setLocation(500, 300);
	jf1.setVisible(true);
	lb1=new JLabel("new name",JLabel.CENTER); 
	lb1.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb1.setBounds(280,60, 120, 30);
	lb2=new JLabel("new author",JLabel.CENTER); 
	lb2.setFont(new Font("隶书",Font.PLAIN,20));
	lb2.setBounds(280, 110, 120, 30);
	lb3=new JLabel("new Borrow",JLabel.CENTER); 
	lb3.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb3.setBounds(280,160, 120, 30);
	lb4=new JLabel("new Borrowpeople",JLabel.CENTER); 
	lb4.setFont(new Font("隶书",Font.PLAIN,20));
	lb4.setBounds(230, 210, 170, 30);
	lb5=new JLabel("new Borrowtime",JLabel.CENTER); 
	lb5.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb5.setBounds(230,260, 170, 30);
	lb6=new JLabel("new stiiltime",JLabel.CENTER); 
	lb6.setFont(new Font("隶书",Font.PLAIN,20));
	lb6.setBounds(280, 310, 120, 30);
	lb7=new JLabel("new money",JLabel.CENTER); 
	lb7.setFont(new Font("隶书",Font.PLAIN,20)); 
	lb7.setBounds(280,360, 120, 30);
	lb8=new JLabel("new ps",JLabel.CENTER); 
	lb8.setFont(new Font("隶书",Font.PLAIN,20));
	lb8.setBounds(280, 410, 120, 30);
	t1=new JTextField(); 
	t1.setBounds(400, 60, 100, 30);
	t2=new JTextField(); 
	t2.setBounds(400, 110, 100, 30);
	t3=new JTextField();
	t4=new JTextField();
	t3.setBounds(400, 160, 100, 30);
	t4.setBounds(400, 210, 100, 30);
	t5=new JTextField();
	t6=new JTextField();
	t5.setBounds(400, 260, 100, 30);
	t6.setBounds(400, 310, 100, 30);
	t7=new JTextField();
	t8=new JTextField();
	t7.setBounds(400, 360, 100, 30);
	t8.setBounds(400, 410, 100, 30);
	b1=new JButton("确定"); 
	b2=new JButton("返回");  
	b1.setSize(90,40);
	b1.setLocation(290, 470);
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setVisible(true);
	b1.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			String a1=t1.getText();
			String n2=t2.getText();
			String n3=t3.getText();
			String n4=t4.getText();
			int n5=Integer.parseInt(t5.getText());
			int n6=Integer.parseInt(t6.getText());
			int n7=Integer.parseInt(t7.getText());
			String n8=t8.getText();
			try {
				borrowbookUpdate1(a1,n2,n3,n4,n5,n6,n7,n8,n);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			Updateok1();
			 } 
	});
	b2.setSize(90,40);
	b2.setLocation(410, 470);
	b2.setFont(new Font("隶书",Font.PLAIN,20));
	b2.setVisible(true);
	b2.addActionListener(new ActionListener(){
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1=new JPanel();
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(t1);
	jp1.add(lb2);
	jp1.add(lb3);
	jp1.add(lb4);
	jp1.add(lb5);
	jp1.add(lb6);
	jp1.add(t5);
	jp1.add(t6);
	jp1.add(t4);
	jp1.add(t3);
	jp1.add(t2);;
	jp1.add(b2);
	jp1.add(b1);
	jp1.add(lb8);
	jp1.add(lb7);
	jp1.add(t7);
	jp1.add(t8);
}
static void borrowok(String n1,int day) {//借书完成
	JFrame jf1;
	JPanel jp1;
	JLabel lb1,lb2,lb3;
	JButton b1;
	jf1=new JFrame("borrowok");
	jp1=new JPanel();
	jf1.setSize(500,400);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("您已成功借阅！",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(480,30);
	lb1.setLocation(10, 20);
	lb1.setVisible(true);
	String a="null";
	try {
		a = bookSelect1(n1);
	} catch (SQLException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
	}
	lb2=new JLabel(a,JLabel.CENTER);
	lb2.setFont(new Font("隶书",Font.PLAIN,20));
	lb2.setSize(480,30);
	lb2.setLocation(10, 70);
	lb2.setVisible(true);
	day=day+15;
	lb3=new JLabel("请在"+day+"号前归还",JLabel.CENTER);
	lb3.setFont(new Font("隶书",Font.PLAIN,20));
	lb3.setSize(480,30);
	lb3.setLocation(10, 130);
	lb3.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,40);
	b1.setLocation(220,280);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
	jp1.add(lb2);
	jp1.add(lb3);
}
static void okUPdate() {//ok界面
		JFrame jf1;
		JPanel jp1;
		JLabel lb1;
		JButton b1;
		jf1=new JFrame("Update");
		jp1=new JPanel();
		jf1.setSize(300,200);
		jf1.setLocationRelativeTo(null);
		jf1.setVisible(true);
		lb1=new JLabel("个人信息修改成功！");
		lb1.setFont(new Font("隶书",Font.PLAIN,20));
		lb1.setSize(280,30);
		lb1.setLocation(20, 20);
		lb1.setVisible(true);
		b1=new JButton("确定");
		b1.setFont(new Font("隶书",Font.PLAIN,20));
		b1.setSize(80,30);
		b1.setLocation(105,100);
		b1.setVisible(true);
		b1.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				jf1.dispose();
			}
		});
		jp1.setLayout(null);
		jf1.add(jp1,BorderLayout.CENTER);
		jp1.add(lb1);
		jp1.add(b1);
	}
static void ErrorLogin1() {//维护报错界面
		JFrame jf1;
		JPanel jp1;
		JLabel lb1;
		JButton b1;
		jf1=new JFrame("Error");
		jp1=new JPanel();
		jf1.setSize(300,200);
		jf1.setLocationRelativeTo(null);
		jf1.setVisible(true);
		lb1=new JLabel("两次输入的密码不相同！");
		lb1.setFont(new Font("隶书",Font.PLAIN,20));
		lb1.setSize(280,30);
		lb1.setLocation(20, 20);
		lb1.setVisible(true);
		b1=new JButton("确定");
		b1.setFont(new Font("隶书",Font.PLAIN,20));
		b1.setSize(80,30);
		b1.setLocation(105,100);
		b1.setVisible(true);
		b1.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				jf1.dispose();
			}
		});
		jp1.setLayout(null);
		jf1.add(jp1,BorderLayout.CENTER);
		jp1.add(lb1);
		jp1.add(b1);
	}
static void ErrorBorrow() {//借书错误
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Error");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("您选择的书籍不存在！");
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(20, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void ErrorBorrow1() {//借书错误1
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Error");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("您选择的书籍已被借出！");
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(20, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void money1() {//罚款界面弹出
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Error");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("您已超过还书期限罚款2元！");
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(20, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void stillok() {//还书完成
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Error");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("您已成功还书",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(20, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void Errorstill() {//借书错误界面
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Error");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("您并未借阅该书！",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(20, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void Updateok() {//维护成功
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Updateok");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("维护信息提交成功！",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(10, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void UpdateError() {//维护错吴
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("UpdateError");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("请确认还书后在进行维护！",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(10, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void addError() {//添加错误
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("addError");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("该id已被添加！",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(10, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void addok() {//加书成功
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("addok");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("添加成功！",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(10, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void Updateok1() {//修改成功
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Updateok");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("修改成功！",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(10, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void Delok() {//删除成功
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Delok");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("删除成功！",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(10, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void nullError() {//空警告
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("nullErro");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("输入框不能为空！",JLabel.CENTER);
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(10, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
static void UpdateError1() {
	JFrame jf1;
	JPanel jp1;
	JLabel lb1;
	JButton b1;
	jf1=new JFrame("Error");
	jp1=new JPanel();
	jf1.setSize(300,200);
	jf1.setLocationRelativeTo(null);
	jf1.setVisible(true);
	lb1=new JLabel("您输入的用户名不存在！");
	lb1.setFont(new Font("隶书",Font.PLAIN,20));
	lb1.setSize(280,30);
	lb1.setLocation(20, 20);
	lb1.setVisible(true);
	b1=new JButton("确定");
	b1.setFont(new Font("隶书",Font.PLAIN,20));
	b1.setSize(80,30);
	b1.setLocation(105,100);
	b1.setVisible(true);
	b1.addActionListener(new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			jf1.dispose();
		}
	});
	jp1.setLayout(null);
	jf1.add(jp1,BorderLayout.CENTER);
	jp1.add(lb1);
	jp1.add(b1);
}
public static void main(String[] args) {
		main_1(); 
	}
}